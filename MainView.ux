<App>
	<ClientPanel>
        <JavaScript>
			var Observable = require("FuseJS/Observable");
			
			var hikes = [
				{
					id: 0,
					name: "Tricky Trails",
					location: "Lakebed, Utah",
					distance: 10.4,
					rating: 4,
					comments: "This hike was nice and hike-like. Glad I didn't bring a bike."
				},
				{
					id: 1,
					name: "Mondo Mountains",
					location: "Black Hills, South Dakota",
					distance: 20.86,
					rating: 3,
					comments: "Not the best, but would probably do again. Note to self: don't forget the sandwiches next time."
				},
				{
					id: 2,
					name: "Pesky Peaks",
					location: "Bergenhagen, Norway",
					distance: 8.2,
					rating: 5,
					comments: "Short but SO sweet!!"
				},
				{
					id: 3,
					name: "Rad Rivers",
					location: "Moriyama, Japan",
					distance: 12.3,
					rating: 4,
					comments: "Took my time with this one. Great view!"
				},
				{
					id: 4,
					name: "Dangerous Dirt",
					location: "Cactus, Arizona",
					distance: 19.34,
					rating: 2,
					comments: "Too long, too hot. Also that snakebite wasn't very fun."
				}
			];
			
			/* Set default value of hike */
			var hike = Observable(); /* Set default value of hike */
			
			/**
			 * The mapping function will be called whenever there is a new value in "hike". This new value is 
			 * what gets passed to the function as its argument. The function will then return a new value based 
			 * on this argument, which represents the value in the Observable we're creating. 
			 */
			var name = hike.map(function(x) { return x.name; });
			var location = hike.map(function(x) { return x.location; });
			var distance = hike.map(function(x) { return x.distance; });
			var rating = hike.map(function(x) { return x.rating; });
			var comments = hike.map(function(x) { return x.comments; });
			
			/* Get data of button then pass it to our current hike form data */
			function chooseHike(arg) {
				hike.value = arg.data;
			}
			
            module.exports = {
                hikes: hikes,
				
				name: name,
				location: location,
				distance: distance,
				rating: rating,
				comments: comments,
				
				chooseHike: chooseHike
            };
        </JavaScript>
		
		<ScrollView>
			<StackPanel>
				<Each Items="{hikes}">
					<Button Text="{name}" Clicked="{chooseHike}" />
				</Each>
				
				<Text Value="{name}" />
				
				<Text>Name:</Text>
				<TextBox Value="{name}" />
				
				<Text>Location:</Text>
				<TextBox Value="{location}" />

				<Text>Distance (km):</Text>
				<TextBox Value="{distance}" InputHint="Decimal" />

				<Text>Rating:</Text>
				<TextBox Value="{rating}" InputHint="Integer" />

				<Text>Comments:</Text>
				<TextView Value="{comments}" TextWrapping="Wrap" />
			</StackPanel>
		</ScrollView>
    </ClientPanel>
</App>